using System.IO;
using static System.Net.WebRequestMethods;
using System.Threading;
using System.Timers;
using System.Linq;

namespace AdventCodeConsole
{
    internal class Program
    {       
        static void Main(string[] args)
        {
            string line;
            StreamReader sr = new StreamReader("C:\\Users\\chengdesu\\Desktop\\練習目錄\\AdventOfCode\\2023\\input\\adventofcode_2023_day_9_input.txt");
            line = sr.ReadLine()!;

            int result =0;
            while (line != null)
            {
                //基本上可以總結出規律就是每次加上history的尾巴就能推論出下個值
                int[] history = line.Split(' ').Select(x=>Convert.ToInt32(x)).ToArray();
                int count = history.Length-1;
                int sum = 0;
                while (count > 0)
                {
                    //每次縮減history用同array即可
                    sum += history[count];
                    for(int i = 0; i < count; i++)                    
                        history[i] = history[i+1] - history[i];                    
                    count--;
                }
                //因為基本上推論最差會做到history剩一個，所以就不多花時間判斷是不是all 0了，算就現有穩定時間來最佳化就好
                sum += history[0];//尾部補加
                result += sum;
                line = sr.ReadLine()!;
            }

            sr.Close();
            Console.WriteLine(result);
            Console.ReadLine();
        }

        private static bool isNumeric(char c)
        {
            if (c >= 48 && c <= 57)
                return true;
            return false;
        }

        private static long GCD(long num1, long num2)
        {
            long min = 0;
            long max = 0;
            long maxModMin = 0;
            min = Math.Min(num1, num2);
            max = Math.Max(num1, num2);
            maxModMin = max % min;
            return maxModMin > 0 ? GCD(min, maxModMin) : min;
        }

        private static long LCM(long num1, long num2)
        {
            return num1 * num2 / GCD(num1, num2);
        }

        //就...很不好說，就是要一個個去確認題目規律已陷入循環，但一般的逐步根本看不出來，下面的討論友幫忙整理規律，但說實話一定是額外花很多時間統計，除非已有經驗，如果是死題，可能會因此永遠無解
        //https://www.reddit.com/r/adventofcode/comments/18dg1hw/2023_day_8_part_2_about_the_correctness_of_a/
        //https://www.reddit.com/r/adventofcode/comments/18dfpub/2023_day_8_part_2_why_is_spoiler_correct/
    }
}