using System.IO;
using static System.Net.WebRequestMethods;
using System.Threading;

namespace AdventCodeConsole
{
    internal class Program
    {
        static void Main(string[] args)
        {
            string line;
            int result = 0;
            StreamReader sr = new StreamReader("C:\\Users\\chengdesu\\Desktop\\練習目錄\\AdventOfCode\\2023\\input\\adventofcode_2023_day_3_input.txt");
            line= sr.ReadLine()!;
            List<char[]> question = new List<char[]>();//把題目變成陣列，如果長寬確定可用char[][]如果都不確定就用List<List<char>>
            while (line != null)
            {                
                question.Add(line.ToArray());
                line = sr.ReadLine()!;
            }

            for(int i = 0; i < question.Count; i++)
            {
                for(int j = 0; j < question[i].Length; j++)
                {
                    if (question[i][j] == '*')
                    {
                        result += ParseNumber(question, i, j);//中
                    }
                }
            }

            sr.Close();
            Console.WriteLine(result);
            Console.ReadLine();
        }

        private static bool isNumeric(char c)
        {
            if (c >= 48 && c <= 57)
                return true;
            return false;
        }
        
        private static int ParseNumber(List<char[]> question, int row, int col)
        {
            int count = 0;
            int result = 1;
            for(int i = -1; i <= 1; i++)
            {
                int tempRow = row + i;
                if (!(tempRow >= 0 && tempRow <= question.Count - 1)) continue;//判斷邊界
                for (int j = -1; j <= 1; j++)
                {
                    if(i==0 && j == 0) continue;
                    int tempCol = col + j;
                    string numberStr = "";
                    if (tempCol >= 0 && tempCol <= question[0].Length - 1 && isNumeric(question[tempRow][tempCol]))//判斷邊界和起點的值來確定要不要繼續
                        numberStr += question[tempRow][tempCol];
                    else
                        continue;

                    count++; if (count > 2) return 0;//提前中斷點

                    int left = 1;//因為起點有了，左右發展就從1開始
                    int right = 1;
                    while (tempCol - left >= 0 && isNumeric(question[tempRow][tempCol - left]))//每次都要確定邊界避免錯誤
                    {
                        numberStr = question[tempRow][tempCol - left] + numberStr;//左右發展一個是加在前，一個是加在後，為了不混淆就不用+=之類的，就普通的字串合併讓格式左右看起來有規律
                        question[tempRow][tempCol - left] = '.';//已取用完的要填上
                        left++;
                    }

                    while (tempCol + right <= question[0].Length - 1 && isNumeric(question[tempRow][tempCol + right]))
                    {
                        numberStr = numberStr + question[tempRow][tempCol + right];
                        question[tempRow][tempCol + right] = '.';
                        right++;
                    }

                    result *= int.Parse(numberStr);
                }
            }

            return count == 2 ? result : 0;//一定要剛好兩個數相鄰
        }
    }
}